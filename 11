Please find below the answers to the questions you shared with us.
Should you need any further clarification or additional information, please do not hesitate to contact us.

Best regards,
[Your Name / Team Name]

This topic is currently being reviewed by our team in order to validate the solution and integrate it into the service offering.


This mechanism is implemented in the data ingestion service offering to enable dynamic configuration updates via ephemeral pods, which populate a shared RWX volume consumed by NiFi, allowing configuration changes without restarting the main processing pods.

To dynamically manage configuration files without restarting NiFi pods, you can:

    Create a shared volume with ReadWriteMany (RWX) access (e.g., NFS, CephFS, or PVC backed by RWX storage).

    Mount this volume in both:

        The NiFi pods (as read-only or read-write depending on your needs).

        Ephemeral pods (dedicated to managing configuration, with read-write access).

    Load ConfigMaps into the ephemeral pods, then write their contents into the shared RWX volume.

    The NiFi pods will then read the configuration from the shared volume, allowing updates without restarting the pods.

This approach decouples ConfigMap updates from NiFi restarts, enabling more flexible and dynamic configuration management.


With this method, you can mount Python, Bash, or Groovy scripts in a shared volume between your ephemeral pods and the NiFi pods. For example, to deploy a new version of a Python script, you simply recreate the ConfigMap associated with your ephemeral pods, and the updated script will automatically be available in NiFi without restarting the NiFi pod. This way, in the InvokeScriptedProcessor, you can reference the path to the shared mount point that contains the Python or other scripts.
